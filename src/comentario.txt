const group = new THREE.Group();
group.add(cubeMesh);
group.add(cubeMesh2);
group.add(cubeMesh3);

scene.add(group)

// const cubeMesh2 = new THREE.Mesh( cubeGeometry, cubeMaterial)
// const cubeMesh3 = new THREE.Mesh( cubeGeometry, cubeMaterial)
// cubeMesh2.position.x = 2;
// cubeMesh3.position.x = -2;

======================================================================

// const aspectRatio = window.innerWidth / window.innerHeight;

// //initialize Orthohraphic camera
// const camera = new THREE.OrthographicCamera(
//   -1 * aspectRatio, 1 * aspectRatio, 1, -1, 0.1, 200
// )

======================================================================
cubeMesh.rotation.reorder('YXZ')

cubeMesh.rotation.y = THREE.MathUtils.degToRad(45);
cubeMesh.rotation.x = THREE.MathUtils.degToRad(90);

=====================================================================

  //fazendo com q a animação tenha uma velocidade
  const currentTime = clock.getElapsedTime();
  const delta = currentTime - previousTime;
  previousTime = currentTime;

  cubeMesh.rotation.y += THREE.MathUtils.degToRad(1) * delta * 20;
  
  Math.sin(currentTime);

  cubeMesh.scale.x = Math.sin(currentTime);

  ========================================================================

  const vertices = new Float32Array([
  0,0,0, //arestas da forma
  0,2,0,
  2,0,0
]);

const bufferAttribute = new THREE.BufferAttribute(vertices, 3);
const geometry = new THREE.BufferGeometry();
geometry.setAttribute('position', bufferAttribute);

const cubeMesh = new THREE.Mesh( geometry, cubeMaterial)

====================================================================
//Fog Concept
const fog = new THREE.Fog(0xffffff, 1, 10);
scene.fog = fog;
// mudando o fundo
scene.background = new THREE.Color('white');

===================================================================
const material = new THREE.MeshPhongMaterial();
 material.shininess = 100;
 material.color = new THREE.Color('red')

 =================================================================
 // pane.addInput(material, 'metalness', {
//   min: 0,
//   max: 1,
//   step: 0.01
// })

// pane.addInput(material, 'rughness', {
//   min: 0,
//   max: 1, 
//   step: 0.01
// })


===================================================================

// add objects to the scene
// const cubeGeometry = new THREE.BoxGeometry(1,1,1, 2, 2, 2);
// const material = new THREE.MeshBasicMaterial({
//   color: "red",
//   // transparent: true,
//   // opacity: 0.5,
//   //wireframe: true
// })